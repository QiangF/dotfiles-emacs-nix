#+TITLE: Sway config
#+PROPERTY: header-args :tangle config
#+auto_tangle: t

* Variables
** Modifier
#+BEGIN_SRC conf
set $mod Mod4
#+END_SRC

** Movement
Keys to move around Sway
#+BEGIN_SRC conf
set $left h
set $down j
set $up k
set $right l
#+END_SRC

** Preferred applications
#+BEGIN_SRC conf
set $term alacritty
set $emacs emacsclient -n -c
set $browser firefox
#+END_SRC

** Launchers
Preferred application launcher
Note: pass the final command to swaymsg so that the resulting window can be opened on the original workspace that the command was run on.

#+BEGIN_SRC conf
set $menu ~/.config/rofi/launchers/misc/launcher.sh | xargs swaymsg exec --
set $pw_gui ~/sh/wofi-pass/wofi-pass | xargs swaymsg exec --
#+END_SRC

* Config
** Output configuration
You can get the names of your outputs by running:
#+BEGIN_EXAMPLE conf
swaymsg -t get_outputs
#+END_EXAMPLE

#+BEGIN_SRC conf :tangle desktop
output * bg #000000 solid_color
output DP-1 resolution 2560x1440@165Hz position 1440,560 adaptive_sync on
output DP-2 resolution 2560x1440 position 0,0 transform 270
workspace 1 output DP-1
workspace 2 output DP-2
workspace 3 output DP-1
#+END_SRC

#+BEGIN_SRC conf :tangle framework
output * bg #000000 solid_color
output eDP-1 resolution 2256x1504@60Hz scale 1.5
#+END_SRC

#+BEGIN_SRC conf
default_border pixel 1
#+END_SRC

** Idle configuration

This will lock your screen after 300 seconds of inactivity, then turn off your displays after another 300 seconds, and turn your screens back on when resumed. It will also lock your screen before your computer goes to sleep.

#+BEGIN_EXAMPLE conf
exec swayidle -w \
         timeout 300 'swaylock -f -c 000000' \
         timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
         before-sleep 'swaylock -f -c 000000'
#+END_EXAMPLE

** Input configuration

You can get the names of your inputs by running: swaymsg -t get_inputs. Read =man 5 sway-input= for more information about this section.
#+BEGIN_SRC conf :tangle desktop
input "5426:133:Razer_Razer_Basilisk_V2" {
        accel_profile flat enabled
}
#+END_SRC

#+BEGIN_SRC conf :tangle framework
input "2362:628:PIXA3854:00_093A:0274_Touchpad" {
        natural_scroll enabled
        tap enabled
}
#+END_SRC

** Keybindings
*** General
Kill focused window
#+BEGIN_SRC conf
bindsym $mod+Shift+q kill
#+END_SRC

Launcher
#+BEGIN_SRC conf
bindsym $mod+space exec $menu
#+END_SRC

Drag floating windows by holding down $mod and left mouse button. Resize them with right mouse button + $mod. Despite the name, also works for non-floating windows. Change normal to inverse to use left mouse button for resizing and right mouse button for dragging.
#+BEGIN_SRC conf
floating_modifier $mod normal
#+END_SRC

Reload the configuration file
#+BEGIN_SRC conf
bindsym $mod+Shift+c reload
#+END_SRC

Logout
#+BEGIN_SRC conf
bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'
#+END_SRC

*** Applications

#+BEGIN_SRC conf
bindsym $mod+Return exec $term
bindsym $mod+apostrophe exec $emacs
bindsym $mod+z exec $browser
#+END_SRC

Password manager
#+BEGIN_SRC conf
bindsym $mod+p exec $pw_gui -t
bindsym $mod+Shift+p exec $pw_gui
#+END_SRC

*** Moving around:
Move your focus around
#+BEGIN_SRC conf
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right
#+END_SRC

Or use $mod+[up|down|left|right]
#+BEGIN_SRC conf
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right
#+END_SRC

Switch to other output
#+BEGIN_SRC conf
bindsym $mod+Tab focus output left
#+END_SRC

Move the focused window with the same, but add Shift
#+BEGIN_SRC conf
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right
#+END_SRC

Ditto, with arrow keys
#+BEGIN_SRC conf
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right
#+END_SRC

*** Workspaces
Switch to workspace
#+BEGIN_SRC conf
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
bindsym $mod+3 workspace number 3
bindsym $mod+4 workspace number 4
bindsym $mod+5 workspace number 5
bindsym $mod+6 workspace number 6
bindsym $mod+7 workspace number 7
bindsym $mod+8 workspace number 8
bindsym $mod+9 workspace number 9
bindsym $mod+0 workspace number 10
#+END_SRC

Move focused container to workspace
Note: workspaces can have any name you want, not just numbers.
#+BEGIN_SRC conf
bindsym $mod+Shift+1 move container to workspace number 1
bindsym $mod+Shift+2 move container to workspace number 2
bindsym $mod+Shift+3 move container to workspace number 3
bindsym $mod+Shift+4 move container to workspace number 4
bindsym $mod+Shift+5 move container to workspace number 5
bindsym $mod+Shift+6 move container to workspace number 6
bindsym $mod+Shift+7 move container to workspace number 7
bindsym $mod+Shift+8 move container to workspace number 8
bindsym $mod+Shift+9 move container to workspace number 9
bindsym $mod+Shift+0 move container to workspace number 10
#+END_SRC

*** Backlight

#+BEGIN_SRC conf :tangle framework
bindsym XF86MonBrightnessUp exec brillo -A 10 -u 150000
bindsym XF86MonBrightnessDown exec brillo -U 10 -u 150000
#+END_SRC

*** Layout stuff
You can "split" the current object of your focus with $mod+b or $mod+v, for horizontal and vertical splits respectively.
#+BEGIN_SRC conf
bindsym $mod+Control+$right splith
bindsym $mod+Control+$down splitv
#+END_SRC

Switch to different layouts
#+BEGIN_SRC conf
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split
#+END_SRC

Toggle fullscreen
#+BEGIN_SRC conf
bindsym $mod+f fullscreen
#+END_SRC

Toggle floating
#+BEGIN_SRC conf
bindsym $mod+Shift+space floating toggle
#+END_SRC

Swap focus between the tiling area and the floating area
#+BEGIN_SRC conf :tangle no
bindsym $mod+space focus mode_toggle
#+END_SRC

Move focus to the parent container
#+BEGIN_SRC conf
bindsym $mod+a focus parent
#+END_SRC

*** Media control
#+BEGIN_SRC conf
bindsym $mod+bracketright exec mpc prev
bindsym $mod+bracketleft exec mpc next
bindsym $mod+backslash exec mpc toggle
#+END_SRC

*** Scratchpad:
Sway has a "scratchpad", which is a bag of holding for windows. You can send windows there and get them back later.

Move the currently focused window to the scratchpad
#+BEGIN_SRC conf
bindsym $mod+Shift+minus move scratchpad
#+END_SRC

Show the next scratchpad window or hide the focused scratchpad window. If there are multiple scratchpad windows, this command cycles through them.
#+BEGIN_SRC conf
bindsym $mod+minus scratchpad show
#+END_SRC

*** Resizing containers:

#+BEGIN_SRC conf
mode "resize" {
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    bindsym Escape mode "default"
    bindsym Control+g mode "default"
}
bindsym $mod+r mode "resize"
#+END_SRC

** Status Bar:
Read `man 5 sway-bar` for more information about this section.

When the status_command prints a new line to stdout, swaybar updates. The default just shows the current date and time.
#+BEGIN_EXAMPLE conf
bar {
    position top

    status_command while date +'%Y-%m-%d %l:%M:%S %p'; do sleep 1; done

    colors {
        statusline #ffffff
        background #323232
        inactive_workspace #32323200 #32323200 #5c5c5c
    }
}
#+END_EXAMPLE

#+BEGIN_SRC conf
bar {
    swaybar_command waybar
}
#+END_SRC

** Window Rules
*** Applications
#+BEGIN_SRC conf :tangle desktop
for_window [app_id="firefox"] move container to workspace 1
for_window [class="discord"] move container to workspace 2
for_window [class="emacs"] move container to workspace 1
#+END_SRC

*** Games
***** Launchers
#+BEGIN_SRC conf :tangle desktop
for_window [app_id="lutris"] move container to workspace 3
for_window [class="Steam"] move container to workspace 3
for_window [class="steam_*"] move container to workspace 3
#+END_SRC

***** Minecraft
#+BEGIN_SRC conf :tangle desktop
for_window [class="Minecraft*"] move container to workspace 3
#+END_SRC

***** Overwatch
#+BEGIN_SRC conf :tangle desktop
for_window [class="battle.net.exe"] move container to workspace 3
for_window [class="overwatch.exe"] move container to workspace 3
for_window [class="overwatch.exe"] fullscreen enable
# Stash floating wine system tray to scratchpad
for_window [title="Wine System Tray"] move container to scratchpad
#+END_SRC

* Autostart

#+BEGIN_SRC conf :tangle desktop
exec discord-canary
#+END_SRC

* Includes
If we're on my desktop, load the =desktop= config
#+BEGIN_SRC conf :tangle (if (string= "desktop" (system-name)) "config" "")
include desktop
#+END_SRC

If we're on my Framework laptop, load the =framework= config
#+BEGIN_SRC conf :tangle (if (string= "framework" (system-name)) "config" "")
include framework
#+END_SRC

#+BEGIN_SRC conf
include /etc/sway/config.d/*
#+END_SRC
